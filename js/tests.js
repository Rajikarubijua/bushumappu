// Generated by CoffeeScript 1.6.2
(function() {
  var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  define(['utils'], function(_arg) {
    var W, assert, prettyDebug, run, sort;

    W = _arg.W, sort = _arg.sort, prettyDebug = _arg.prettyDebug;
    assert = function(test_name, value, config, criterias) {
      var func, k, msg, name, result, results, success, to_print, v, _i, _len, _ref, _ref1;

      success = true;
      results = {};
      for (name in criterias) {
        func = criterias[name];
        result = func(value, config);
        if (Array.isArray(result)) {
          _ref = result, result = _ref[0], to_print = _ref[1];
          to_print = result + " " + prettyDebug(to_print);
        } else {
          to_print = prettyDebug(result);
        }
        results[name] = to_print;
        if (!result) {
          success = false;
        }
      }
      msg = [test_name];
      _ref1 = sort(results);
      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
        name = _ref1[_i];
        msg.push((W(20, name)) + " " + results[name]);
      }
      msg.push(W(50, "", "â€“"));
      for (k in value) {
        v = value[k];
        v = prettyDebug(v);
        msg.push((W(20, k)) + " " + v.slice(0, 29));
      }
      console.assert(success, msg.join('\n'));
      if (success) {
        return console.info("ok");
      }
    };
    run = function(tests, which) {
      var error, name, test, _results;

      _results = [];
      for (name in tests) {
        test = tests[name];
        if ((which != null ? which.length : void 0) && __indexOf.call(which, name) < 0) {
          continue;
        }
        console.info(name);
        console.time(name);
        error = [];
        try {
          _results.push(test());
        } finally {
          console.timeEnd(name);
        }
      }
      return _results;
    };
    return {
      assert: assert,
      run: run
    };
  });

}).call(this);

/*
//@ sourceMappingURL=tests.map
*/
