// Generated by CoffeeScript 1.6.2
(function() {
  define([], function() {
    var Grid;

    Grid = (function() {
      function Grid() {
        this.map = d3.map();
      }

      Grid.prototype.get = function(coord) {
        return this.map.get((this.getCoord(coord)).coord);
      };

      Grid.prototype.has = function(coord) {
        return this.map.has((this.getCoord(coord)).coord);
      };

      Grid.prototype.remove = function(coord) {
        return this.map.remove((this.getCoord(coord)).coord);
      };

      Grid.prototype.coords = function() {
        return this.map.keys();
      };

      Grid.prototype.nodes = function() {
        return this.map.values();
      };

      Grid.prototype.entries = function() {
        return this.map.entries();
      };

      Grid.prototype.forEach = function(func) {
        return this.map.forEach(func);
      };

      Grid.prototype.set = function(coord, node) {
        var x, y, _ref;

        _ref = this.getCoord(coord), coord = _ref.coord, x = _ref.x, y = _ref.y;
        node.x = x;
        node.y = y;
        return this.map.set(coord, node);
      };

      Grid.prototype.getCoord = function(coord) {
        var d, x, y, _ref;

        if (typeof coord === 'string') {
          _ref = (function() {
            var _i, _len, _ref, _results;

            _ref = coord.split('x');
            _results = [];
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
              d = _ref[_i];
              _results.push(+d);
            }
            return _results;
          })(), x = _ref[0], y = _ref[1];
        } else if (Array.isArray(coord)) {
          x = coord[0], y = coord[1];
          coord = x + 'x' + y;
        } else if ('x' in coord && 'y' in coord) {
          x = coord.x, y = coord.y;
          coord = x + 'x' + y;
        }
        return {
          coord: coord,
          x: x,
          y: y
        };
      };

      return Grid;

    })();
    return {
      Grid: Grid
    };
  });

}).call(this);

/*
//@ sourceMappingURL=grid.map
*/
